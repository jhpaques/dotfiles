# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
#set $left h
#set $down j
#set $up k
#set $right l
set $left Left
set $down Down
set $up Up
set $right Right
# Your preferred terminal emulator
set $term foot
set $termfloating foot -a footfloating
# Your preferred application launcher
#set $menu wmenu-run $menu_opts
set $bemenu_opts "-w --fn scientifica --tb '#8ec07c' --tf '#1d2021' --nb '#282828' --nf '#ebdbb2' --hb '#1d2021' --hf '#8ec07c' --ab '#1d2021' --af '#d5c4a1' --sb '#1d2021' --sf '#d5c4a1' --fbb '#1d2021' --fbf '#d5c4a1'"
set $menu BEMENU_OPTS=$bemenu_opts bemenu-run -p ">>" | xargs swaymsg exec --


# Deactivate XWayland
#xwayland disable
xwayland enable


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/Images/wallpaper/hokusai_wave.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

set $laptop eDP-1
set $monitor DP-5

output $monitor scale 1.5
output $laptop scale 1.5

output $monitor res 3840x2160 pos 0 0
output $laptop res 2560x1600 pos 2560 1080



### Idle configuration
#
# Example configuration:

exec swayidle -w \
        timeout 300 'swaylock -f -c 000000' \
        timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
        before-sleep 'swaylock -f -c 000000'

bindsym $mod+l exec swaylock -f -c 000000

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
    xkb_layout "fr"
    xkb_variant "bepo_afnor"
    xkb_options "caps:escape"
    natural_scroll enabled
}


### Window decoration (no border) and gaps

default_border none
gaps inner 10
smart_gaps on
focus_follows_mouse always


### Notification daemon

exec dunst


### App specific behavior

for_window [app_id="foot"] opacity set .985
for_window [app_id="footfloat"] floating enable
for_window [window_role="dialog"] floating enable

#assign [app_id="firefox"] 2
#assign [app_id="anki"] 5


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $termfloating

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec swaymsg exit


# Scripts:

    bindsym $mod+p exec BEMENU_OPTS=$bemenu_opts ~/.scripts/keepassxc/keepassxc-menu.sh
    bindsym $mod+t exec $termfloating vim ~/TODO.md


#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Alt+1 move container to workspace number 1
    bindsym $mod+Alt+2 move container to workspace number 2
    bindsym $mod+Alt+3 move container to workspace number 3
    bindsym $mod+Alt+4 move container to workspace number 4
    bindsym $mod+Alt+5 move container to workspace number 5
    bindsym $mod+Alt+6 move container to workspace number 6
    bindsym $mod+Alt+7 move container to workspace number 7
    bindsym $mod+Alt+8 move container to workspace number 8
    bindsym $mod+Alt+9 move container to workspace number 9
    bindsym $mod+Alt+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Move workspace to the other monitor
    #bindsym $mod+Home move workspace to output left
    #bindsym $mod+End move workspace to output right
    bindsym $mod+Tab move workspace to output left

    # Go to next workspace
    bindsym $mod+Ctrl+Left workspace prev
    bindsym $mod+Ctrl+Right workspace next
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Utilities:
#

    # volume
    set $volumescript ~/.scripts/volume/volume.sh
    bindsym XF86AudioRaiseVolume exec $volumescript up
    bindsym XF86AudioLowerVolume exec $volumescript down
    bindsym $mod+XF86AudioRaiseVolume exec $volumescript up 1
    bindsym $mod+XF86AudioLowerVolume exec $volumescript down 1
    bindsym XF86AudioMute exec $volumescript mute

    # monitor brightness (coarse)
    bindsym XF86MonBrightnessUp exec xbacklight -steps 3 +5 && dunstify Backlight -h int:value:$(xbacklight -get)
    bindsym XF86MonBrightnessDown exec xbacklight -steps 3 -5 && dunstify Backlight -h int:value:$(xbacklight -get)

    # monitor brightness (fine)
    bindsym $mod+XF86MonBrightnessUp exec xbacklight +1 && dunstify Backlight -h int:value:$(xbacklight -get)
    bindsym $mod+XF86MonBrightnessDown exec xbacklight -1 && dunstify Backlight -h int:value:$(xbacklight -get)

    # keyboard brightness
    bindsym XF86KbdBrightnessUp exec xbacklight -ctrl smc::kbd_backlight -steps 3 +5 && dunstify "Keyboard Backlight" -h int:value:$(xbacklight -ctrl smc::kbd_backlight -get)
    bindsym XF86KbdBrightnessDown exec xbacklight -ctrl smc::kbd_backlight -steps 3 -5 && dunstify "Keyboard Backlight" -h int:value:$(xbacklight -ctrl smc::kbd_backlight -get)

    # screenshot with grim
    bindsym Print exec GRIM_DEFAULT_DIR=~/Screenshots grim && imv $(ls -t ~/Screenshots/20* | head -1)

#
# Status Bar:

bar {
   swaybar_command waybar
}


include /etc/sway/config.d/*
